C++ Conventions 

1.) Capitalize the first letter of the classname.
2.) Private members are listed first. If you do this, 
    there is no need to use the 'private' keyword. If you list them after the public keyword, 
    you will need to identify them using the private keyword.
3.) Use 'get<VariableName>' for accessing private variables Use 'set<VariableName>' for assigning values to private variables
4.) You will need to signify that the functions are part of the class definition by using the namespace <classname>::

C++ supports 3 types of inheritance
    * Public
        Derived class inherits all the member variables of a base class, (both private and public) but it can 
        only directly access the public members of the base class.                                                                                                                                                                                                                                                                                                                                                               
    * Private 
    * Protected

Inheritance 

| Public | Protected | Private |
| :--- | --- | ---: |
| public members are public in derived class and can be accessed directly by member functions and nonmember functions | public members become protected members in derived class and can be accessed directly by member functions | public members become private in derived class and can be accessed directly by member functions |
| protected members are protected in derived class and can be accessed directly by member functions | protected members become protected members in derived class and can be accessed directly by member functions | protected members become private in derived class and can be accessed directly by member functions |
